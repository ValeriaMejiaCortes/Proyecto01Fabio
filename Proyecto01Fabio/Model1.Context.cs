//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto01Fabio
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Proyecto01FabioEntities : DbContext
    {
        public Proyecto01FabioEntities()
            : base("name=Proyecto01FabioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<STUDENT> STUDENT { get; set; }
    
        public virtual int proc_InsertStudent(string typeDocumentStudent, Nullable<int> documentStudent, Nullable<int> codeStudent, string nameStudent, string lastNameStudent, string genderStudent, string emailStudent, Nullable<int> phoneStudent)
        {
            var typeDocumentStudentParameter = typeDocumentStudent != null ?
                new ObjectParameter("typeDocumentStudent", typeDocumentStudent) :
                new ObjectParameter("typeDocumentStudent", typeof(string));
    
            var documentStudentParameter = documentStudent.HasValue ?
                new ObjectParameter("documentStudent", documentStudent) :
                new ObjectParameter("documentStudent", typeof(int));
    
            var codeStudentParameter = codeStudent.HasValue ?
                new ObjectParameter("codeStudent", codeStudent) :
                new ObjectParameter("codeStudent", typeof(int));
    
            var nameStudentParameter = nameStudent != null ?
                new ObjectParameter("nameStudent", nameStudent) :
                new ObjectParameter("nameStudent", typeof(string));
    
            var lastNameStudentParameter = lastNameStudent != null ?
                new ObjectParameter("lastNameStudent", lastNameStudent) :
                new ObjectParameter("lastNameStudent", typeof(string));
    
            var genderStudentParameter = genderStudent != null ?
                new ObjectParameter("genderStudent", genderStudent) :
                new ObjectParameter("genderStudent", typeof(string));
    
            var emailStudentParameter = emailStudent != null ?
                new ObjectParameter("emailStudent", emailStudent) :
                new ObjectParameter("emailStudent", typeof(string));
    
            var phoneStudentParameter = phoneStudent.HasValue ?
                new ObjectParameter("phoneStudent", phoneStudent) :
                new ObjectParameter("phoneStudent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_InsertStudent", typeDocumentStudentParameter, documentStudentParameter, codeStudentParameter, nameStudentParameter, lastNameStudentParameter, genderStudentParameter, emailStudentParameter, phoneStudentParameter);
        }
    }
}
